# -*- coding: utf-8 -*-
"""LSTM_Stock Prediction_1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ltJzaHX6vdtH0gWa0JE4AejAct8K6ll8
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import LSTM, Dropout, Dense, Activation

import datetime

data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/samsung.csv')
data.head()

dataset = data.dropna()
dataset.head()

high_prices = dataset['High'].values
low_prices = dataset['Low'].values
mid_prices = (high_prices + low_prices)/2

print(len(mid_prices))

seq_len = 50
sequence_length = seq_len + 1

result = []
for index in range(len(mid_prices)- sequence_length):
  result.append(mid_prices[index: index + sequence_length])

print(len(result))

normalized_data = []
for window in result:
  normalized_window = [((float(p)/float(window[0]))-1) for p in window]
  normalized_data.append(normalized_window)

result = np.array(normalized_data)

row = int(round(result.shape[0]*0.9))
train = result[:row, :]
np.random.shuffle(train)

x_train = train[:,:-1]
x_train = np.reshape(x_train, (x_train.shape[0], x_train.shape[1],1))
y_train = train[:, -1]

x_test = result[row:, :-1]
x_test = np.reshape(x_test, (x_test.shape[0], x_test.shape[1], 1))
y_test = result[row:, -1]

x_train.shape, x_test.shape

model = Sequential()

model.add(LSTM(50, return_sequences = True, input_dim = 1, input_length = 50))
model.add(LSTM(64, return_sequences = False))
model.add(Dense(1, activation = 'linear'))
model.compile(loss = 'mse', optimizer = 'Adam')
model.summary()

model.fit(x_train, y_train, 
          validation_data = (x_test, y_test), 
          batch_size = 10, 
          epochs = 20)

pred = model.predict(x_test)

fig = plt.figure(facecolor = 'white')
ax = fig.add_subplot(111)
ax.plot(y_test, label = 'True')
ax.plot(pred, label = 'Prediction')
ax.legend()
plt.show()

